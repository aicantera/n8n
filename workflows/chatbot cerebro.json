{
  "createdAt": "2025-06-09T16:34:20.833Z",
  "updatedAt": "2025-06-13T04:12:13.000Z",
  "id": "k6PApGOzpLKtnZ0q",
  "name": "chatbot cerebro",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "currentEnvironment",
              "value": "https://cerebro-dev-7d8f30a4b3ff.herokuapp.com"
            },
            {
              "name": "status_report",
              "value": "https://cerebro-core-050afed4ca53.herokuapp.com/sma/receive_messagebird_data"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Variables",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -1180,
        -800
      ],
      "id": "a8977c1e-b3f8-4fcc-a362-c47a4944ae60"
    },
    {
      "parameters": {
        "url": "={{$node[\"Set Variables\"].json[\"currentEnvironment\"]}}/mbauth/auth_guardian?phone={{ $('WhatsApp Trigger').item.json.messages[0].from }}",
        "options": {}
      },
      "name": "Auth Guardian",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -960,
        -800
      ],
      "id": "c1179ee7-55d5-4c29-ad7f-9fc452b81407"
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.number_students }}",
              "operation": "largerEqual",
              "value2": 1
            }
          ]
        }
      },
      "name": "IF - Auth Success",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -740,
        -800
      ],
      "id": "c989c6ef-f773-41f7-980e-895732ffab87"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "group",
              "value": "={{ $('Auth Guardian').item.json.students_data[0].courses[0].group }}"
            },
            {
              "name": "guardian_name",
              "value": "={{ $('Auth Guardian').item.json.students_data[0].guardian_name }}"
            },
            {
              "name": "role",
              "value": "={{ $('Auth Guardian').item.json.students_data[0].role }}"
            },
            {
              "name": "school_section",
              "value": "={{ $('Auth Guardian').item.json.students_data[0].courses[0].school_section }}"
            },
            {
              "name": "student_name",
              "value": "={{ $('Auth Guardian').item.json.students_data[0].student_name }}"
            },
            {
              "name": "tenant_id",
              "value": "={{ $('Auth Guardian').item.json.students_data[0].tenant_id }}"
            },
            {
              "name": "user_id",
              "value": "={{ $('Auth Guardian').item.json.students_data[0].user_id }}"
            },
            {
              "name": "year",
              "value": "={{ $('Auth Guardian').item.json.students_data[0].courses[0].year }}"
            },
            {
              "name": "school_name",
              "value": "={{ $('Auth Guardian').item.json.students_data[0].school_name }}"
            },
            {
              "name": "feature"
            },
            {
              "name": "validated_whatsapp",
              "value": "={{ $('Auth Guardian').item.json.validated_whatsapp }}"
            }
          ],
          "boolean": [
            {
              "name": "multi_student",
              "value": "={{ $('Auth Guardian').item.json.multi_student }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Main Logic Placeholder",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -520,
        -800
      ],
      "id": "0313de02-5a8d-4ff8-849c-13cb9abb7717"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.state ? $json.state_edited : $json.state_finded}}",
                    "rightValue": "menuInicial",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "67ada602-4a37-408f-880d-29a2c0a2964d"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "menu inicial"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "49660bd6-0c53-49b6-a272-353eae4acf80",
                    "leftValue": "={{ $json.state ? $json.state_edited : $json.state_finded }}",
                    "rightValue": "espera_respuesta_menu_inicial",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "espera_respuesta_menu_inicial"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e63b8bcb-ffae-47fd-be83-4460047ee4f3",
                    "leftValue": "={{ $json.state ? $json.state_edited : $json.state_finded }}",
                    "rightValue": "espera_respuesta_menu_calendario",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "respuesta_menu_calendario"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "faed8982-b54d-4cc9-85df-45c31ad392ec",
                    "leftValue": "={{ $json.state ? $json.state_edited : $json.state_finded }}",
                    "rightValue": "espera_respuesta_faq",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "espera_respuesta_faq"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d560ba0-a11a-45f3-9d2d-d13049d4df4c",
                    "leftValue": "={{ $json.state ? $json.state_edited : $json.state_finded }}",
                    "rightValue": "seleccion_alumno",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "seleccion_alumno"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7ba99368-0eb6-48ed-af01-77c7c4768b41",
                    "leftValue": "={{ $json.state ? $json.state_edited : $json.state_finded }}",
                    "rightValue": "espera_respuesta_evento_calendario",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "resp evento calendario"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2d803248-e0f9-4478-8ff0-768db480b95d",
                    "leftValue": "={{ $json.state ? $json.state_edited : $json.state_finded }}",
                    "rightValue": "espera_respuesta_evento_informacion_calendario",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "mas info evento calendario"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5f2b8eb8-dca7-40cc-9d86-1ed8f85b1027",
                    "leftValue": "={{ $json.state ? $json.state_edited : $json.state_finded }}",
                    "rightValue": "espera_respuesta_academico",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "resp academico"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1440,
        -780
      ],
      "id": "7cdd5610-e227-4acb-8870-c29658a61c9d",
      "name": "Switch"
    },
    {
      "parameters": {
        "collection": "user_state",
        "options": {},
        "query": "={\n  \"phoneNumber\":\"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\"\n}"
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        -300,
        -800
      ],
      "id": "1bf3262e-29cb-414b-b6c9-eb3f099c4493",
      "name": "MongoDB",
      "alwaysOutputData": true,
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      },
      "notes": "sdi no encuentras datos lanza un mensaje de no data returned"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "83be55d6-1bd8-4380-93b4-de2dd522cec4",
              "leftValue": "={{ $json._id.toString() }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -80,
        -800
      ],
      "id": "3cc4ad9b-d231-447e-bb94-9beaffc8d484",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "insert",
        "collection": "user_state",
        "fields": "=phoneNumber ,state, userStateId, date, type_conversation",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        580,
        -700
      ],
      "id": "0350eb73-8086-42ea-8cb0-8b3adc555133",
      "name": "MongoDB1",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3631f4b8-c7de-42ac-a953-b78f8b10b879",
              "name": "phoneNumber",
              "value": "={{ $('WhatsApp Trigger').item.json.messages[0].from }}",
              "type": "string"
            },
            {
              "id": "961af1d0-8fba-486d-b2ff-5acdf1625b55",
              "name": "state",
              "value": "menuInicial",
              "type": "string"
            },
            {
              "id": "5c9e798a-8608-42b9-9270-1f7f94f9cff8",
              "name": "userStateId",
              "value": "={{ $json.uuid }}",
              "type": "string"
            },
            {
              "id": "2dcff05b-66b8-45a5-abc6-c4fa9f78c174",
              "name": "date",
              "value": "={{ $json.now }}",
              "type": "string"
            },
            {
              "id": "cf0f54d3-8433-4a11-9d75-9815e05a876a",
              "name": "type_conversation",
              "value": "chatbot",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        360,
        -700
      ],
      "id": "09dc5559-adf9-48e2-a749-538b5c605844",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "updates": [
          "messages"
        ],
        "options": {}
      },
      "type": "n8n-nodes-base.whatsAppTrigger",
      "typeVersion": 1,
      "position": [
        -1900,
        -1400
      ],
      "id": "1a441ff5-52de-4c02-bfb7-69e1738823f7",
      "name": "WhatsApp Trigger",
      "webhookId": "79902303-7c8b-4b2f-b91e-30dfa471b049",
      "credentials": {
        "whatsAppTriggerApi": {
          "id": "3id56xF4KBltVP02",
          "name": "WhatsApp OAuth account cerebro"
        }
      }
    },
    {
      "parameters": {
        "collection": "user_state",
        "options": {},
        "query": "={\n  \"phoneNumber\":\"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\"\n}"
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        740,
        -700
      ],
      "id": "db6500ba-15fd-47b3-9a1e-c42fd67912ed",
      "name": "MongoDB2",
      "alwaysOutputData": true,
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      },
      "notes": "sdi no encuentras datos lanza un mensaje de no data returned"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e1c21e64-5126-4a0c-a594-363efc7028d1",
              "name": "phoneNumber_finded",
              "value": "={{ $('MongoDB').item.json.phoneNumber }}",
              "type": "string"
            },
            {
              "id": "93580ec9-264e-4176-bc40-b50aaf34e1f2",
              "name": "state_finded",
              "value": "={{ $('MongoDB').item.json.state }}",
              "type": "string"
            },
            {
              "id": "ea7c6241-4996-49e5-8eea-1e84ac3d27d1",
              "name": "type_conversation_finded",
              "value": "={{ $('MongoDB').item.json.type_conversation }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        900,
        -900
      ],
      "id": "9aba8df9-8b8b-4123-9d25-f44b407b5a0b",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e1c21e64-5126-4a0c-a594-363efc7028d1",
              "name": "phoneNumber_edited",
              "value": "={{ $json.phoneNumber }}",
              "type": "string"
            },
            {
              "id": "93580ec9-264e-4176-bc40-b50aaf34e1f2",
              "name": "state_edited",
              "value": "={{ $json.state }}",
              "type": "string"
            },
            {
              "id": "78d840a2-ae29-44c0-b0fc-1dcd3b44ff00",
              "name": "type_conversation_edited",
              "value": "={{ $json.type_conversation }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        900,
        -700
      ],
      "id": "14b4f334-4086-4200-8d98-a2ef3b69d013",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.messages[0].audio.voice }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "1d07820e-eba7-477b-9d97-b7eafab2b218"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "mensaje de voz"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1af6c276-b636-440b-bbe5-cbc837091bd2",
                    "leftValue": "={{ $json.messages[0].type }}",
                    "rightValue": "document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "documento"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5618e653-a507-4ea4-979f-00b7f2b130d9",
                    "leftValue": "={{ $json.messages[0].type }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "imagen"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "da89dce8-8fe7-4db2-8fdf-ec07c5275504",
                    "leftValue": "={{ $json.messages[0].type }}",
                    "rightValue": "video",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "video"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cb6a1619-9e4f-4fb1-ada2-ddbc8d0e9bc3",
                    "leftValue": "={{ $json.messages[0].type }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8bb0b189-ee63-4c74-aaaf-62d744854522",
                    "leftValue": "={{ $json.messages[0].interactive.type }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "mensaje replica"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1400,
        -1463
      ],
      "id": "076fb3e0-f180-439d-934e-a222b35afe66",
      "name": "Switch1",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"text\": \"interactive\",\n  \"text\": {\n    \"body\": \"Lo siento, en este momento no tengo la capacidad de interpretar notas de voz. Sin embargo, estamos trabajando para incluir esta función en futuras actualizaciones.  Gracias por tu comprensión.\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1180,
        -1600
      ],
      "id": "072128b3-f59b-45cd-bb7a-5a12fa743431",
      "name": "Error mensaje de voz"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"text\": \"interactive\",\n  \"text\": {\n    \"body\": \"Lo siento, en este momento no tengo la capacidad de interpretar archivos. Gracias por tu comprensión.\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1180,
        -1400
      ],
      "id": "5d81b2ee-8a82-44c0-a983-871c638078d4",
      "name": "error documento"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"text\": \"interactive\",\n  \"text\": {\n    \"body\": \"Lo siento, en este momento no tengo la capacidad de interpretar imagenes. Sin embargo, estamos trabajando para incluir esta función en futuras actualizaciones. Gracias por tu comprensión.\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1180,
        -1200
      ],
      "id": "3b0dd856-9c8e-463e-bb34-f59301d1110d",
      "name": "error imagen"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"text\": \"interactive\",\n  \"text\": {\n    \"body\": \"Lo siento, en este momento no tengo la capacidad de interpretar notas de voz. Sin embargo, estamos trabajando para incluir esta función en futuras actualizaciones.  Gracias por tu comprensión.\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1180,
        -1000
      ],
      "id": "8ed66e1c-c97f-4288-b50c-f4f960cecc89",
      "name": "error video"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0b13a5d9-6075-4751-9c4a-d9665ea0c75b",
              "leftValue": "={{ $('Main Logic Placeholder').item.json.multi_student }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3460,
        -1760
      ],
      "id": "6f6c92e8-1353-4ec8-829f-f69e29ec23d0",
      "name": "If1"
    },
    {
      "parameters": {
        "jsCode": "// Importante: Esto se coloca dentro de un nodo \"Code\" en n8n\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nreturn [\n  {\n    json: {\n      uuid: uuidv4(),\n      now: new Date().toLocaleString('es-MX', {\n  timeZone: 'America/Mexico_City'\n})\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        140,
        -700
      ],
      "id": "4e63bef4-44ee-4fbd-8f56-26c0626e377b",
      "name": "Code",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "={{ $('Set Variables').item.json.currentEnvironment }}﻿/assistant/select_student?user_id={{ $('Main Logic Placeholder').item.json.user_id }}﻿﻿&tenant_id=﻿﻿{{ $('Main Logic Placeholder').item.json.tenant_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3880,
        -1940
      ],
      "id": "62283365-fe1b-4256-91d6-2b9992beca3a",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5127ea2d-67c4-4e02-9cc4-b41d25b89c73",
              "name": "student_id",
              "value": "={{ $('Main Logic Placeholder').item.json.students_data[0].student_id }}",
              "type": "string"
            },
            {
              "id": "858d8bba-88da-4426-9ca2-2ad5917f192a",
              "name": "phoneNumber",
              "value": "={{ $json.phoneNumber_finded ? $json.phoneNumber_finded : $json.phoneNumber_edited }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3880,
        -1740
      ],
      "id": "3e694494-e6d6-477b-bb3c-fa616c2f52fe",
      "name": "student_id"
    },
    {
      "parameters": {
        "operation": "update",
        "collection": "user_state",
        "updateKey": "=phoneNumber",
        "fields": "student_id",
        "upsert": true,
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        4100,
        -1740
      ],
      "id": "a50c53de-baf5-4662-b2c8-96b5c88fdefd",
      "name": "MongoDB3",
      "alwaysOutputData": true,
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"5214434901193\",\n  \"type\": \"interactive\",\n  \"interactive\": {\n    \"type\": \"button\",\n    \"body\": {\n      \"text\": \"¡Hola! 😊 Estoy aquí para ayudarte a encontrar la información que necesitas.👉 Presiona 'Calendario' 📅 para ver la información de los eventosprogramados para este mes.👉 Presiona 'Preguntas frecuentes'❓ para resolver dudas frecuentes.👉 Presiona 'Académico'❓ para obtener información de tareas o lecciones de tu alumno.\"\n    },\n    \"action\": {\n      \"buttons\": [\n        {\n          \"type\": \"reply\",\n          \"reply\": {\n            \"id\": \"calendario\",\n            \"title\": \"Calendario\"\n          }\n        },\n        {\n          \"type\": \"reply\",\n          \"reply\": {\n            \"id\": \"preguntas_frecuentes\",\n            \"title\": \"Preguntas Frecuentes\"\n          }\n        },\n        {\n          \"type\": \"reply\",\n          \"reply\": {\n            \"id\": \"academico\",\n            \"title\": \"Académico\"\n          }\n        }\n      ]\n    }\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5420,
        -1740
      ],
      "id": "b765dada-3f68-45e0-81a2-2e47775261be",
      "name": "menu principal"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "670342e3-e699-4e30-af27-04db7bace385",
              "name": "user_id",
              "value": "={{ $('Main Logic Placeholder').item.json.students_data[0].user_id }}",
              "type": "string"
            },
            {
              "id": "391a519a-9e7c-4dee-8dfc-f8b38f7f8fc7",
              "name": "information",
              "value": "se presenta menu inicial",
              "type": "string"
            },
            {
              "id": "915b68b5-3dee-44ad-82f6-65a3d9a74629",
              "name": "log_id",
              "value": "={{ $json.uuid }}",
              "type": "string"
            },
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "state",
              "value": "espera_respuesta_menu_inicial",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4540,
        -1740
      ],
      "id": "da6c3507-cf8f-4c59-ab23-46865cd14583",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "operation": "insert",
        "collection": "log_chatbot",
        "fields": "user_id, information,log_id, date",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        4760,
        -1740
      ],
      "id": "f6dc0341-6e08-4db6-b7de-62ffce157ebd",
      "name": "MongoDB4",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Importante: Esto se coloca dentro de un nodo \"Code\" en n8n\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nreturn [\n  {\n    json: {\n      uuid: uuidv4(),\n      now: new Date().toLocaleString('es-MX', {\n  timeZone: 'America/Mexico_City'\n})\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4320,
        -1740
      ],
      "id": "9ab341f3-165a-4f8b-856d-b882831d2d9e",
      "name": "Code1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "collection": "user_state",
        "updateKey": "userStateId",
        "fields": "state, date",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        5200,
        -1740
      ],
      "id": "3056ee39-a0b1-4f49-baa8-b46b7dddf0bc",
      "name": "MongoDB5",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $('Code1').item.json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "state",
              "value": "espera_respuesta_menu_inicial",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4980,
        -1740
      ],
      "id": "7458866a-a583-4af3-89b6-a75d93270899",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('WhatsApp Trigger').item.json.messages[0].interactive.button_reply.id }}",
                    "rightValue": "preguntas_frecuentes",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "ae0403eb-4811-49f5-9f3f-4277c01979e6"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "preguntas_frecuentes"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d5ecb85c-4c14-4d45-9f24-7783cc2e0ce1",
                    "leftValue": "={{ $('WhatsApp Trigger').item.json.messages[0].interactive.button_reply.id }}",
                    "rightValue": "academico",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "academico"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bcdc59b2-73ca-4bb5-b043-279d90c6f320",
                    "leftValue": "={{ $('WhatsApp Trigger').item.json.messages[0].interactive.button_reply.id }}",
                    "rightValue": "calendario",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "calendario"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3500,
        -940
      ],
      "id": "5847ccb6-e192-458b-a562-ba8895f828ac",
      "name": "Switch2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"type\": \"interactive\",\n  \"interactive\": {\n    \"type\": \"button\",\n    \"body\": {\n      \"text\": \"{{ $json.safeText }}\"\n    },\n    \"action\": {\n      \"buttons\": [\n        {\n          \"type\": \"reply\",\n          \"reply\": {\n            \"id\": \"menu_inicial\",\n            \"title\": \"Menú Incial\"\n          }\n        }\n      ]\n    }\n } }\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5580,
        -840
      ],
      "id": "34aef4e6-f64f-41e3-8403-9733ab851340",
      "name": "menu principal1"
    },
    {
      "parameters": {
        "jsCode": "// Modo: Run Once for All Items\n\n// 1) Leer variables desde el Set previo\nconst input = items[0].json;\n\n// 2) Definir orden de meses\nconst monthOrder = [\n  \"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\n  \"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\",\n];\n\n// 3) Función para ordenar un array de meses según monthOrder\nfunction sortMonths(months) {\n  return months.sort(\n    (a, b) => monthOrder.indexOf(a) - monthOrder.indexOf(b)\n  );\n}\n\n// 4) Función para crear diccionario día→eventos\nfunction createEventDaysDictionary(monthEvents) {\n  const eventsByDay = monthEvents.reduce((acc, ev) => {\n    if (ev.type === \"individual\" && ev.content?.day) {\n      const d = String(ev.content.day);\n      acc[d] = acc[d]||[];\n      acc[d].push(ev);\n    }\n    return acc;\n  }, {});\n  const sortedDays = Object.keys(eventsByDay)\n    .map(d => parseInt(d))\n    .sort((a,b)=>a-b);\n  const dictionary = sortedDays.reduce((acc, day, i) => {\n    acc[String(i+1)] = String(day);\n    return acc;\n  }, {});\n  return { dictionary, eventsByDay };\n}\n\n// 5) Función para generar el mensaje de WhatsApp\nfunction createMonthlyMessage(data, currentMonth) {\n  let msg = `*¡Eventos de ${currentMonth}!* 📅\\n\\n`;\n  const monthEvents = data.filter(\n    i => i.month === currentMonth && i.type === \"individual\"\n  );\n  const hasContent = monthEvents.length>0 ? \"yes\":\"no\";\n\n  if (!monthEvents.length) {\n    msg += `No hay eventos programados para ${currentMonth}. ¡Pero cada día es una oportunidad para aprender!\\n\\n`;\n  } else {\n    const { dictionary, eventsByDay } = createEventDaysDictionary(monthEvents);\n    msg += \"*Eventos del mes:*\\n\";\n    for (const [order, day] of Object.entries(dictionary)) {\n      const evs = eventsByDay[day]||[];\n      msg += `${order}. 🗓 Día ${day}:\\n`;\n      evs.forEach((ev, idx) => {\n        msg += `   ${String.fromCharCode(97+idx)}) \"${ev.content.title}\"\\n`;\n      });\n      msg += \"\\n\";\n    }\n  }\n  msg += \"¡Esperamos tu participación! Juntos haremos de este mes una experiencia inolvidable. 🌟\";\n  return { message: msg, eventDaysDictionary: createEventDaysDictionary(monthEvents).dictionary, hasContent };\n}\n\n// 6) Parsear MonthlyGuide (string o ya objeto)\nlet monthlyGuideData = [];\ntry {\n  const raw = input.MonthlyGuide;\n  const parsed = typeof raw === \"string\" ? JSON.parse(raw) : raw;\n  // Si viene envuelto en { MonthlyGuide: [...] }\n  monthlyGuideData = Array.isArray(parsed)\n    ? parsed\n    : parsed.MonthlyGuide || [];\n} catch (e) {\n  // si falla el parse, dejamos el array vacío\n  monthlyGuideData = [];\n}\n\n// 7) Sacar los meses disponibles y ordenarlos\nlet availableMonths = [\n  ...new Set(monthlyGuideData.map(i=>i.month))\n];\navailableMonths = sortMonths(availableMonths);\n\n// 8) Mes actual e invocar creación de mensaje\nconst currentMonth = monthOrder[new Date().getMonth()];\nconst { message, eventDaysDictionary, hasContent } =\n  createMonthlyMessage(monthlyGuideData, currentMonth);\n\n// 9) Devolver la salida que usará el resto del workflow\nreturn [{\n  json: {\n    salida_whatsapp_guardian_function: {\n      mensaje_guardian_options: message,\n      dias_eventos_enumerados: eventDaysDictionary,\n      available_months: availableMonths,\n      has_content: hasContent,\n    }\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4920,
        -740
      ],
      "id": "e3284f76-a641-42f1-9d1d-0ccb0ee60171",
      "name": "Code2"
    },
    {
      "parameters": {
        "url": "={{ $('Set Variables').item.json.currentEnvironment }}//assistant/community_records_whatsapp?user_id={{ $('Main Logic Placeholder').item.json.user_id }}&role={{ $('Main Logic Placeholder').item.json.role }}&tenant_id={{ $('Main Logic Placeholder').item.json.tenant_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4480,
        -740
      ],
      "id": "2a189cd8-827b-42de-9c7c-e5871ecbabae",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c939e818-0f2a-4c19-8d62-c77f842d8667",
              "name": "MonthlyGuide",
              "value": "={{ JSON.stringify($json.data_whatsapp_guardian_conversation.MonthlyGuide) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4700,
        -740
      ],
      "id": "d1d05127-fa9a-4799-98c7-df28490b9af1",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6b5b1a8a-0f4e-442a-9509-55164899707b",
              "name": "safeText",
              "value": "={{ $json.mensaje_guardian_options\n    .replace(/\\r?\\n/g, \"\\\\n\")\n    .replace(/^\\\\n+|\\\\n+$/g, \"\") }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5340,
        -840
      ],
      "id": "3a6e1e73-8f6e-481e-a68a-b4c795bb4221",
      "name": "Edit Fields6"
    },
    {
      "parameters": {
        "operation": "update",
        "collection": "user_state",
        "updateKey": "userStateId",
        "fields": "state, date",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        6240,
        -840
      ],
      "id": "8eedaf5d-79a9-4f67-b55a-703cc44c602f",
      "name": "MongoDB6",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "state",
              "value": "espera_respuesta_menu_calendario",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6020,
        -840
      ],
      "id": "631ac78b-1dbf-4c9e-af13-2ed27284234b",
      "name": "Edit Fields7"
    },
    {
      "parameters": {
        "jsCode": "\n\nreturn [\n  {\n    json: {\n      now: new Date().toLocaleString('es-MX', {\n  timeZone: 'America/Mexico_City'\n})\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5800,
        -840
      ],
      "id": "b13556c6-3c4d-4d98-8b8d-216224eab877",
      "name": "Code3",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "670342e3-e699-4e30-af27-04db7bace385",
              "name": "user_id",
              "value": "={{ $('Main Logic Placeholder').item.json.students_data[0].user_id }}",
              "type": "string"
            },
            {
              "id": "391a519a-9e7c-4dee-8dfc-f8b38f7f8fc7",
              "name": "information",
              "value": "se presenta menu calendario",
              "type": "string"
            },
            {
              "id": "915b68b5-3dee-44ad-82f6-65a3d9a74629",
              "name": "log_id",
              "value": "={{ $json.uuid }}",
              "type": "string"
            },
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "state",
              "value": "espera_respuesta_menu_inicial",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4040,
        -740
      ],
      "id": "f725e64e-2db6-493e-96a9-f5b93c8374fc",
      "name": "Edit Fields8"
    },
    {
      "parameters": {
        "operation": "insert",
        "collection": "log_chatbot",
        "fields": "user_id, information,log_id, date",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        4260,
        -740
      ],
      "id": "ee615403-8408-47fb-85fa-0da313b1e37d",
      "name": "MongoDB7",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Importante: Esto se coloca dentro de un nodo \"Code\" en n8n\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nreturn [\n  {\n    json: {\n      uuid: uuidv4(),\n      now: new Date().toLocaleString('es-MX', {\n  timeZone: 'America/Mexico_City'\n})\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3820,
        -740
      ],
      "id": "22e54685-9ffc-4579-a082-42342f215996",
      "name": "Code4",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('WhatsApp Trigger').item.json.messages[0].interactive.button_reply.id }}",
                    "rightValue": "menu_inicial",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "432ba432-c707-48e0-8243-31588236a08d"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "menu_inicial"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3100,
        -1000
      ],
      "id": "931b92b5-0b24-4404-b22b-77f5da57f456",
      "name": "Switch3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "670342e3-e699-4e30-af27-04db7bace385",
              "name": "user_id",
              "value": "={{ $('Main Logic Placeholder').item.json.students_data[0].user_id }}",
              "type": "string"
            },
            {
              "id": "391a519a-9e7c-4dee-8dfc-f8b38f7f8fc7",
              "name": "information",
              "value": "se presenta menu preguntas frecuentes",
              "type": "string"
            },
            {
              "id": "915b68b5-3dee-44ad-82f6-65a3d9a74629",
              "name": "log_id",
              "value": "={{ $json.uuid }}",
              "type": "string"
            },
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "state",
              "value": "espera_respuesta_menu_inicial",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3960,
        -1400
      ],
      "id": "edd1a89e-bade-458e-9a6f-8e75bc51c70c",
      "name": "Edit Fields9"
    },
    {
      "parameters": {
        "operation": "insert",
        "collection": "log_chatbot",
        "fields": "user_id, information,log_id, date",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        4180,
        -1400
      ],
      "id": "d4bb448d-7ddc-4c6f-a2ad-e48073e40229",
      "name": "MongoDB8",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Importante: Esto se coloca dentro de un nodo \"Code\" en n8n\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nreturn [\n  {\n    json: {\n      uuid: uuidv4(),\n      now: new Date().toLocaleString('es-MX', {\n  timeZone: 'America/Mexico_City'\n})\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3740,
        -1400
      ],
      "id": "6fd46ef3-6082-4bb4-aad0-b8310ddf3faf",
      "name": "Code5",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"type\": \"interactive\",\n  \"interactive\": {\n    \"type\": \"button\",\n    \"body\": {\n      \"text\": \"✨ ¡Bienvenido a la sección de Preguntas Frecuentes! ✨ Aquí te puedo ayudar a responder las dudas más comunes sobre el colegio./n/n¿Tienes alguna pregunta específica?💬\"\n    },\n    \"action\": {\n      \"buttons\": [\n        {\n          \"type\": \"reply\",\n          \"reply\": {\n            \"id\": \"menu_inicial\",\n            \"title\": \"Volver al menu\"\n          }\n        }\n      ]\n    }\n } }\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        -1400
      ],
      "id": "169195e8-c45b-498f-a840-d8489fceb97b",
      "name": "menu principal2"
    },
    {
      "parameters": {
        "operation": "update",
        "collection": "user_state",
        "updateKey": "userStateId",
        "fields": "state, date",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        4840,
        -1400
      ],
      "id": "f9fc1274-4815-425e-b433-8c055405a2a1",
      "name": "MongoDB9",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $('Code5').item.json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "state",
              "value": "espera_respuesta_faq",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4620,
        -1400
      ],
      "id": "a04aeabb-58f4-4811-aa22-2eec0a370d65",
      "name": "Edit Fields10"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4bae602d-2cf2-49f0-9d2f-6a5c39f866d2",
              "name": "pregunta_guardian",
              "value": "={{ $('WhatsApp Trigger').item.json.messages[0].text.body }}",
              "type": "string"
            },
            {
              "id": "2ea85c48-62a7-4785-af88-6d9c347933c5",
              "name": "nombre_guardian",
              "value": "={{ $('Main Logic Placeholder').item.json.students_data[0].guardian_name }}",
              "type": "string"
            },
            {
              "id": "6f5b24cd-016b-4a88-b6b0-5294494a2a47",
              "name": "tenant",
              "value": "={{ $('Main Logic Placeholder').item.json.students_data[0].tenant_id }}",
              "type": "string"
            },
            {
              "id": "290c4e49-e720-4a5e-88c1-1972314f1ab2",
              "name": "student_id",
              "value": "={{ $('Main Logic Placeholder').item.json.students_data[0].student_id }}",
              "type": "string"
            },
            {
              "id": "7b089c53-4ecf-49fd-9fee-0dec2eba653f",
              "name": "user_id",
              "value": "={{ $('Main Logic Placeholder').item.json.students_data[0].user_id }}",
              "type": "string"
            },
            {
              "id": "22c1f197-cdf8-4cd9-827f-978ab626a62f",
              "name": "urlTest",
              "value": "={{ $('Set Variables').item.json.currentEnvironment }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3620,
        -460
      ],
      "id": "26039478-0b59-4300-9279-b2d6891ef529",
      "name": "cuerpo funcion response_worker_FAQ"
    },
    {
      "parameters": {
        "jsCode": "// 1) Lee todas tus variables del Set anterior\nconst input = items[0].json;\nconst {\n  pregunta_guardian,\n  nombre_guardian,\n  tenant,\n  student_id,\n  user_id,\n  urlTest   // debe venir de tu Set node con la URL base (p. ej. \"https://tu-api.com/\")\n} = input;\n\n// 2) Prepara URLs\nconst initialUrl    = `${urlTest}/assistant/community_assistant_chat_whatsapp`;\nconst statusBaseUrl = `${urlTest}/common_llms/job_status/`;\n\n// 3) Crea el payload\nconst rawData = {\n  user_instruction:        pregunta_guardian,\n  role:                    'guardian',\n  tenant,\n  convo_type:              'customer_service_chat',\n  is_limit_reached:        false,\n  custom_fields:           { interaction_type: 'FAQ' },\n  assistant_instructions:  { context_data: student_id, first_name: nombre_guardian },\n  user_id,\n  faq:                     true,\n};\n\n// 4) Helper de espera\nconst delay = ms => new Promise(r => setTimeout(r, ms));\n\ntry {\n  // 5) POST inicial\n  console.log('POST →', initialUrl, rawData);\n  const postResponse = await this.helpers.httpRequest({\n    method:  'POST',\n    url:     initialUrl,\n    body:    rawData,\n    json:    true,\n    timeout: 90000,\n  });\n\n  const jobId = postResponse.job_id;\n  if (!jobId) throw new Error('No se recibió job_id');\n  console.log('Job ID:', jobId);\n\n  // 6) Polling con GET\n  let finalResult;\n  for (let i = 0; i < 12; i++) {\n    await delay(5000);\n    const statusUrl = `${statusBaseUrl}${jobId}`;\n    console.log(`GET → ${statusUrl}`);\n    const statusResp = await this.helpers.httpRequest({\n      method:  'GET',\n      url:     statusUrl,\n      json:    true,\n      timeout: 60000,\n    });\n    console.log('Status:', statusResp.status);\n    if (statusResp.status === 'Finished') {\n      finalResult = statusResp.result.model_response;\n      break;\n    }\n    if (statusResp.status === 'failed') {\n      throw new Error('El trabajo falló en el servidor');\n    }\n    if (i === 11) {\n      throw new Error('Timeout esperando finalización');\n    }\n  }\n\n  // 7) Retorna la respuesta al flujo\n  return [{ json: { response: finalResult } }];\n\n} catch (err) {\n  console.error('Error en Código:', err.message);\n  return [{ json: { error: err } }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3840,
        -460
      ],
      "id": "5caac5b7-0487-40d7-aaa9-63c41c5f605b",
      "name": "Code6"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "27ace6ed-299c-47ed-b7b8-34c14765c475",
              "leftValue": "={{ $('MongoDB').item.json.state }}",
              "rightValue": "seleccion_alumno",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4100,
        -1940
      ],
      "id": "60d919b2-b7ea-4573-8ccc-79c96814f263",
      "name": "If4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"text\": \"interactive\",\n  \"text\": {\n    \"body\": {{ JSON.stringify($json.message_multi) }}\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4300,
        -2380
      ],
      "id": "c300128f-14bd-4623-9d81-c77f57a8c51e",
      "name": "seleccionar usuario mensaje"
    },
    {
      "parameters": {
        "jsCode": "// Importante: Esto se coloca dentro de un nodo \"Code\" en n8n\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nreturn [\n  {\n    json: {\n      uuid: uuidv4(),\n      now: new Date().toLocaleString('es-MX', {\n  timeZone: 'America/Mexico_City'\n})\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4580,
        -2380
      ],
      "id": "feaebd25-461e-4fba-b978-f01cd411bcd8",
      "name": "Code7",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "collection": "user_state",
        "updateKey": "userStateId",
        "fields": "state, date",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        5040,
        -2380
      ],
      "id": "ca186aa1-950a-4615-85e5-c85d18b82d84",
      "name": "MongoDB10",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $('Code7').item.json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "state",
              "value": "seleccion_alumno",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4820,
        -2380
      ],
      "id": "14d38e7f-68bb-497f-b25b-bf9ab846a957",
      "name": "body estatus seleccion_alumno"
    },
    {
      "parameters": {
        "operation": "insert",
        "collection": "log_chatbot",
        "fields": "user_id, information,log_id, date",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        5480,
        -2380
      ],
      "id": "96d54cf3-05a4-4ffa-9e8a-723f53101fc3",
      "name": "MongoDB11",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "670342e3-e699-4e30-af27-04db7bace385",
              "name": "user_id",
              "value": "={{ $('Main Logic Placeholder').item.json.students_data[0].user_id }}",
              "type": "string"
            },
            {
              "id": "391a519a-9e7c-4dee-8dfc-f8b38f7f8fc7",
              "name": "information",
              "value": "se presenta menu inicial",
              "type": "string"
            },
            {
              "id": "915b68b5-3dee-44ad-82f6-65a3d9a74629",
              "name": "log_id",
              "value": "={{ $('Code7').item.json.uuid }}",
              "type": "string"
            },
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $('Code7').item.json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "state",
              "value": "se presenta menu select student",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5260,
        -2380
      ],
      "id": "dcf5f531-c98d-4e72-abe9-5ff7b4240672",
      "name": "body presentacion menu selec student"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c8c23d02-4a43-45ae-b3a8-ba75ca263b0d",
              "name": "htmlResponseBody",
              "value": "={{ $('HTTP Request').item.json }}",
              "type": "string"
            },
            {
              "id": "db2a36d3-1d7a-4e09-8474-823828015e40",
              "name": "selected_student",
              "value": "={{ $('WhatsApp Trigger').item.json.messages[0].text.body }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4400,
        -1940
      ],
      "id": "06af86d6-67fe-4608-9fed-8ba1dcb4f1a0",
      "name": "Edit Fields11"
    },
    {
      "parameters": {
        "jsCode": "// 1) Recupera tus variables del Set anterior\nconst input = items[0].json;\nconst htmlResponseBody  = JSON.parse(input.htmlResponseBody);     // string JSON con data_multi\nconst selectedStudentNo  = parseInt(input.selected_student, 10);\n\n// 2) Función principal\ntry {\n  // Parsear sólo si viene como string\n  const parsed = typeof htmlResponseBody === 'string'\n    ? JSON.parse(htmlResponseBody)\n    : htmlResponseBody;\n\n  const students = parsed.data_multi;\n  if (!Array.isArray(students) || students.length === 0) {\n    return [{\n      json: {\n        status:  \"error\",\n        message: \"No se encontraron datos de estudiantes\",\n      }\n    }];\n  }\n\n  // Validar rango\n  if (isNaN(selectedStudentNo)\n      || selectedStudentNo < 1\n      || selectedStudentNo > students.length) {\n    return [{\n      json: {\n        status:  \"error\",\n        message: `Por favor selecciona un número entre 1 y ${students.length}`,\n      }\n    }];\n  }\n\n  // Selección\n  const sel = students[selectedStudentNo - 1];\n  return [{\n    json: {\n      status:            \"success\",\n      message:           `Has seleccionado a ${sel.first_name} ${sel.last_name}`,\n      selected_student:  sel,\n    }\n  }];\n\n} catch (err) {\n  return [{\n    json: {\n      status:  \"error\",\n      message: `Error al procesar la solicitud: ${err.message}`,\n    }\n  }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4620,
        -1940
      ],
      "id": "4b4be5d9-b99d-43ff-ad94-c9748b8c603f",
      "name": "Code8"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5127ea2d-67c4-4e02-9cc4-b41d25b89c73",
              "name": "student_id",
              "value": "={{ $json.selected_student.student_id }}",
              "type": "string"
            },
            {
              "id": "858d8bba-88da-4426-9ca2-2ad5917f192a",
              "name": "phoneNumber",
              "value": "={{ $('WhatsApp Trigger').item.json.messages[0].from }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5200,
        -1940
      ],
      "id": "e23bf110-c635-4ee7-970c-4ecfca6652ff",
      "name": "student_id1"
    },
    {
      "parameters": {
        "operation": "update",
        "collection": "user_state",
        "updateKey": "=phoneNumber",
        "fields": "student_id",
        "upsert": true,
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        5420,
        -1940
      ],
      "id": "ad38d188-e992-40a4-994e-9db70b5e01ba",
      "name": "MongoDB12",
      "alwaysOutputData": true,
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"5214434901193\",\n  \"type\": \"interactive\",\n  \"interactive\": {\n    \"type\": \"button\",\n    \"body\": {\n      \"text\": \"¡Hola! 😊 Estoy aquí para ayudarte a encontrar la información que necesitas.👉 Presiona 'Calendario' 📅 para ver la información de los eventosprogramados para este mes.👉 Presiona 'Preguntas frecuentes'❓ para resolver dudas frecuentes.👉 Presiona 'Académico'❓ para obtener información de tareas o lecciones de tu alumno.\"\n    },\n    \"action\": {\n      \"buttons\": [\n        {\n          \"type\": \"reply\",\n          \"reply\": {\n            \"id\": \"calendario\",\n            \"title\": \"Calendario\"\n          }\n        },\n        {\n          \"type\": \"reply\",\n          \"reply\": {\n            \"id\": \"preguntas_frecuentes\",\n            \"title\": \"Preguntas Frecuentes\"\n          }\n        },\n        {\n          \"type\": \"reply\",\n          \"reply\": {\n            \"id\": \"academico\",\n            \"title\": \"Académico\"\n          }\n        }\n      ]\n    }\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6740,
        -1940
      ],
      "id": "2222597c-9153-42c2-a66f-2e0ec520ea4c",
      "name": "menu principal4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "670342e3-e699-4e30-af27-04db7bace385",
              "name": "user_id",
              "value": "={{ $('Main Logic Placeholder').item.json.students_data[0].user_id }}",
              "type": "string"
            },
            {
              "id": "391a519a-9e7c-4dee-8dfc-f8b38f7f8fc7",
              "name": "information",
              "value": "se presenta menu inicial",
              "type": "string"
            },
            {
              "id": "915b68b5-3dee-44ad-82f6-65a3d9a74629",
              "name": "log_id",
              "value": "={{ $json.uuid }}",
              "type": "string"
            },
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "state",
              "value": "espera_respuesta_menu_inicial",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5860,
        -1940
      ],
      "id": "f7589ece-33e3-4fa8-90fc-488134e33740",
      "name": "Edit Fields12"
    },
    {
      "parameters": {
        "operation": "insert",
        "collection": "log_chatbot",
        "fields": "user_id, information,log_id, date",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        6080,
        -1940
      ],
      "id": "bfa4ca8e-3db6-4e24-a04f-4f2a92149ca7",
      "name": "MongoDB13",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Importante: Esto se coloca dentro de un nodo \"Code\" en n8n\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nreturn [\n  {\n    json: {\n      uuid: uuidv4(),\n      now: new Date().toLocaleString('es-MX', {\n  timeZone: 'America/Mexico_City'\n})\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5640,
        -1940
      ],
      "id": "96762b5a-b7a7-4eb0-ba94-e587786f9444",
      "name": "Code9",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "collection": "user_state",
        "updateKey": "userStateId",
        "fields": "state, date",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        6520,
        -1940
      ],
      "id": "6711edb6-3108-4dcf-b321-e917ae1419b0",
      "name": "MongoDB14",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $('Code9').item.json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "state",
              "value": "espera_respuesta_menu_inicial",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6300,
        -1940
      ],
      "id": "bd3f907a-b4db-4154-b4e5-dcf1ca5a5570",
      "name": "Edit Fields13"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fdcbd5e2-5f4e-45c7-96d3-45e10dc3a681",
              "name": "mensaje_guardian_options",
              "value": "={{ $json.salida_whatsapp_guardian_function.mensaje_guardian_options }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5360,
        -640
      ],
      "id": "db6b3abf-abad-42eb-aebb-6f0269e86e65",
      "name": "Edit Fields14"
    },
    {
      "parameters": {
        "operation": "update",
        "collection": "user_state",
        "updateKey": "userStateId",
        "fields": "state, date",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        6220,
        -640
      ],
      "id": "7d03dbe2-30de-4b9f-a4d0-36d53dea8129",
      "name": "MongoDB15",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "state",
              "value": "espera_respuesta_evento_calendario",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6000,
        -640
      ],
      "id": "3efc4e78-82b6-4803-835b-845062c6cb27",
      "name": "Edit Fields15"
    },
    {
      "parameters": {
        "jsCode": "\n\nreturn [\n  {\n    json: {\n      now: new Date().toLocaleString('es-MX', {\n  timeZone: 'America/Mexico_City'\n})\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5780,
        -640
      ],
      "id": "94c324e4-f2c2-4c14-8d7b-cc01c4f9f2b3",
      "name": "Code10",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "670342e3-e699-4e30-af27-04db7bace385",
              "name": "user_id",
              "value": "={{ $('Main Logic Placeholder').item.json.students_data[0].user_id }}",
              "type": "string"
            },
            {
              "id": "391a519a-9e7c-4dee-8dfc-f8b38f7f8fc7",
              "name": "information",
              "value": "se presenta menu academico",
              "type": "string"
            },
            {
              "id": "915b68b5-3dee-44ad-82f6-65a3d9a74629",
              "name": "log_id",
              "value": "={{ $json.uuid }}",
              "type": "string"
            },
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "state",
              "value": "espera_respuesta_menu_inicial",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3980,
        -940
      ],
      "id": "24f536a4-f1a7-403b-86e6-9193b7e3652a",
      "name": "Edit Fields16"
    },
    {
      "parameters": {
        "operation": "insert",
        "collection": "log_chatbot",
        "fields": "user_id, information,log_id, date",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        4200,
        -940
      ],
      "id": "847bfcba-3fe9-4234-8894-5c624d063d19",
      "name": "MongoDB16",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Importante: Esto se coloca dentro de un nodo \"Code\" en n8n\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nreturn [\n  {\n    json: {\n      uuid: uuidv4(),\n      now: new Date().toLocaleString('es-MX', {\n  timeZone: 'America/Mexico_City'\n})\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3760,
        -940
      ],
      "id": "78ec067f-6de0-444b-90ad-b272b3ad17e9",
      "name": "Code11",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"text\": \"interactive\",\n  \"text\": {\n    \"body\": \"Bienvenido al área de Académico de Cerebro.\\n\\n1️⃣  Clases de la semana.\\n2️⃣ Recibir clases por email.\"\n  }\n}\n\n\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4460,
        -940
      ],
      "id": "6371b9a1-624f-4d2a-a57c-4dfab6d033b9",
      "name": "menu academico"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"type\": \"interactive\",\n  \"interactive\": {\n    \"type\": \"button\",\n    \"body\": {\n      \"text\": {{JSON.stringify($json.mensaje_guardian_options) }}\n    },\n    \"action\": {\n      \"buttons\": [\n        {\n          \"type\": \"reply\",\n          \"reply\": {\n            \"id\": \"mas_info_calendario\",\n            \"title\": \"Más Información\"\n          }\n        },\n        {\n          \"type\": \"reply\",\n          \"reply\": {\n            \"id\": \"menu_inicial\",\n            \"title\": \"Regresar al Menú\"\n          }\n        }\n      ]\n    }\n } }\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5560,
        -640
      ],
      "id": "7fb69b48-ca21-4a79-b0ba-c85821438bf2",
      "name": "calendario"
    },
    {
      "parameters": {
        "jsCode": "// 1) Leer input\nconst input = items[0].json;\n\n// 2) Orden de meses\nconst monthOrder = [\n  \"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\n  \"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\",\n];\n\n// 3) Helper: parsear MonthlyGuide indiferente si viene string u objeto\nlet monthlyGuideData = [];\ntry {\n  const raw = input.MonthlyGuide;\n  const parsed = typeof raw === \"string\" ? JSON.parse(raw) : raw;\n  monthlyGuideData = Array.isArray(parsed)\n    ? parsed\n    : parsed.MonthlyGuide || [];\n} catch (e) {\n  console.log(\"Error parseando MonthlyGuide:\", e.message);\n}\n\n// 4) Helper: listado de eventos\nfunction createEventList(data, currentMonth) {\n  let message = `*¡Eventos de ${currentMonth}!* 📅\\n\\n`;\n  const monthEvents = data.filter(i => i.month === currentMonth);\n  const eventDaysDictionary = {};\n  let counter = 1;\n  const seen = new Set();\n\n  if (!monthEvents.length) {\n    message += `No hay eventos programados para ${currentMonth}.\\n\\n`;\n  } else {\n    message += \"*Eventos del mes:*\\n\";\n\n    // 4.1 individuales únicos y ordenados\n    const indivs = monthEvents\n      .filter(e => e.type === \"individual\" && !seen.has(e.content.title))\n      .map(e => ({ day: e.content.day, title: e.content.title }));\n    indivs.sort((a, b) => a.day - b.day);\n    indivs.forEach(ev => {\n      seen.add(ev.title);\n      eventDaysDictionary[String(counter)] = String(ev.day);\n      message += `${counter}. 🗓 Día ${ev.day}: \"${ev.title}\"\\n`;\n      counter++;\n    });\n\n    // 4.2 globals\n    monthEvents\n      .filter(e => e.type === \"global\" && e.content.events)\n      .forEach(e => {\n        Object.keys(e.content.events).forEach(title => {\n          if (!seen.has(title)) {\n            seen.add(title);\n            eventDaysDictionary[String(counter)] = \"0\";\n            message += `${counter}. 🌍 \"${title}\"\\n`;\n            counter++;\n          }\n        });\n      });\n  }\n\n  message += `\\n*¿Qué evento te gustaría conocer más a fondo?* *Escribe* el número correspondiente.`;\n  return { message, eventDaysDictionary };\n}\n\n// 5) Mes actual e invocar\nconst currentMonth = monthOrder[new Date().getMonth()];\nconst { message, eventDaysDictionary } =\n  createEventList(monthlyGuideData, currentMonth);\n\n// 6) Devolver resultados\nreturn [{\n  json: {\n    salida_whatsapp_guardian_function: {\n      mensaje_guardian_options: message,\n      dias_eventos_enumerados: eventDaysDictionary,\n    }\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6140,
        300
      ],
      "id": "ac5f3e21-fba3-47d1-8988-9c1f53b6bf86",
      "name": "Code12"
    },
    {
      "parameters": {
        "url": "={{ $('Set Variables').item.json.currentEnvironment }}//assistant/community_records_whatsapp?user_id={{ $('Main Logic Placeholder').item.json.user_id }}&role={{ $('Main Logic Placeholder').item.json.role }}&tenant_id={{ $('Main Logic Placeholder').item.json.tenant_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5700,
        300
      ],
      "id": "dfcffb1a-1c02-4f7f-aea8-03f250eaed97",
      "name": "HTTP Request2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c939e818-0f2a-4c19-8d62-c77f842d8667",
              "name": "MonthlyGuide",
              "value": "={{ JSON.stringify($json.data_whatsapp_guardian_conversation.MonthlyGuide) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5920,
        300
      ],
      "id": "b188e68e-e7e5-43f0-876c-1127beafe8ce",
      "name": "Edit Fields17"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "797b0050-2694-48ef-a7d9-19a8bd4d4251",
              "leftValue": "={{ $json.status }}",
              "rightValue": "error",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4860,
        -2040
      ],
      "id": "81a56962-c9e9-4426-a0ef-b650108c160d",
      "name": "If5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"text\": \"interactive\",\n  \"text\": {\n    \"body\": \"{{ $json.message }}\"\n  }\n}\n\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5200,
        -2120
      ],
      "id": "bf9f12f3-ae87-4f0a-87b2-cb2a625c787c",
      "name": "menu principal5"
    },
    {
      "parameters": {
        "operation": "update",
        "collection": "user_state",
        "updateKey": "userStateId",
        "fields": "state, date",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        7020,
        300
      ],
      "id": "7c869765-4dac-45bf-b5bd-b5803662577e",
      "name": "MongoDB17",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "state",
              "value": "espera_respuesta_evento_informacion_calendario",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6800,
        300
      ],
      "id": "a8cbdc6d-1e60-423b-a4f3-e844da9b6ff1",
      "name": "Edit Fields18"
    },
    {
      "parameters": {
        "jsCode": "\n\nreturn [\n  {\n    json: {\n      now: new Date().toLocaleString('es-MX', {\n  timeZone: 'America/Mexico_City'\n})\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6580,
        300
      ],
      "id": "2bc36223-aa61-4732-b8a9-c8c51d3821f5",
      "name": "Code13",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "={{ $('Set Variables').item.json.currentEnvironment }}//assistant/community_records_whatsapp?user_id={{ $('Main Logic Placeholder').item.json.user_id }}&role={{ $('Main Logic Placeholder').item.json.role }}&tenant_id={{ $('Main Logic Placeholder').item.json.tenant_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2820,
        600
      ],
      "id": "8f7ce0ed-dda6-474a-865f-5faaa5715a6f",
      "name": "HTTP Request3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c939e818-0f2a-4c19-8d62-c77f842d8667",
              "name": "MonthlyGuide",
              "value": "={{ JSON.stringify($json.data_whatsapp_guardian_conversation.MonthlyGuide) }}",
              "type": "string"
            },
            {
              "id": "ebafc13a-f5bb-48fa-8737-ff324744a721",
              "name": "selected_event",
              "value": "={{ $('WhatsApp Trigger').item.json.messages[0].text.body }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3040,
        600
      ],
      "id": "85223cc8-db76-409f-8a45-6e534893ad3d",
      "name": "Edit Fields19"
    },
    {
      "parameters": {
        "jsCode": "// Run Once for All Items\n\n// 1) Leer variables del Set anterior\nconst input = items[0].json;\nconst rawMonthlyGuide = input.MonthlyGuide;\nconst selectedEventRaw = input.selected_event;\n\n// 2) Orden de meses\nconst monthOrder = [\n  \"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\n  \"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\",\n];\n\n// 3) Funciones auxiliares\nfunction getCurrentMonth() {\n  return monthOrder[new Date().getMonth()];\n}\n\nfunction validateSelectedEvent(sel, total) {\n  if (sel === undefined || sel === null) {\n    return { isValid: false, error: \"No se ha proporcionado un número de evento.\" };\n  }\n  const num = parseInt(sel, 10);\n  if (isNaN(num)) {\n    return { isValid: false, error: `El valor '${sel}' no es un número válido. Por favor, introduce un número.` };\n  }\n  if (num <= 0) {\n    return { isValid: false, error: \"El número de evento debe ser mayor que 0.\" };\n  }\n  if (num > total) {\n    return { isValid: false, error: `Solo hay ${total} eventos disponibles. Por favor, selecciona un número entre 1 y ${total}.` };\n  }\n  return { isValid: true, value: num };\n}\n\nfunction countTotalEvents(data, month) {\n  return data.filter(i => i.month === month && i.type === 'individual').length;\n}\n\nfunction getEventDetails(data, month, selRaw) {\n  const total = countTotalEvents(data, month);\n  const v = validateSelectedEvent(selRaw, total);\n  if (!v.isValid) {\n    return { mensaje: v.error, imagen_url: null, error: \"si\" };\n  }\n  // Filtrar y ordenar individuales\n  const indivs = data\n    .filter(i => i.month===month && i.type==='individual')\n    .sort((a,b)=>\n      parseInt(a.content.day,10)-parseInt(b.content.day,10)\n    );\n  const ev = indivs[v.value - 1];\n  if (ev) {\n    const textMsg =\n      `*Detalles del evento:*\\n\\n` +\n      `🗓 Día ${ev.content.day}\\n` +\n      `📌 ${ev.content.title}\\n\\n` +\n      `${ev.content.text}\\n\\n` +\n      `¡Esperamos contar con tu participación en este emocionante evento! 🌟`;\n    const img = ev.content.image_url || null;\n    return { mensaje: textMsg, imagen_url: img, error: \"no\" };\n  }\n  // Fallback improbable\n  return { mensaje: \"Error inesperado al obtener los detalles del evento.\", imagen_url: null, error: \"si\" };\n}\n\n// 4) Parsear MonthlyGuide\nlet monthlyGuideData = [];\ntry {\n  const parsed = typeof rawMonthlyGuide === 'string'\n    ? JSON.parse(rawMonthlyGuide)\n    : rawMonthlyGuide;\n  monthlyGuideData = Array.isArray(parsed)\n    ? parsed\n    : parsed.MonthlyGuide || [];\n} catch (e) {\n  // si falla parseo, devolvemos un mensaje de error inmediato\n  return [{\n    json: {\n      salida_whatsapp_guardian_function: {\n        mensaje_guardian_options: \"Error al procesar los datos del calendario. Por favor, contacta al administrador.\",\n        imagen_url: null,\n        error: \"si\"\n      }\n    }\n  }];\n}\n\n// 5) Ejecutar lógica\nconst currentMonth = getCurrentMonth();\nconst details = getEventDetails(monthlyGuideData, currentMonth, selectedEventRaw);\n\n// 6) Devolver resultado\nreturn [{\n  json: {\n    salida_whatsapp_guardian_function: {\n      mensaje_guardian_options: details.mensaje,\n      imagen_url: details.imagen_url,\n      error: details.error\n    }\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3280,
        600
      ],
      "id": "a875f1a0-ac68-4a23-a54d-5fc15c459c28",
      "name": "Code14"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b8250e48-e285-4562-a667-b51f63c0a725",
              "leftValue": "={{ $json.salida_whatsapp_guardian_function.error }}",
              "rightValue": "si",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3500,
        600
      ],
      "id": "21e6fa79-674a-4683-ab65-02487c71c826",
      "name": "If6"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"type\": \"interactive\",\n  \"interactive\": {\n    \"type\": \"button\",\n    \"body\": {\n      \"text\": {{JSON.stringify($json.salida_whatsapp_guardian_function.mensaje_guardian_options)}}\n    },\n    \"action\": {\n      \"buttons\": [\n        {\n          \"type\": \"reply\",\n          \"reply\": {\n            \"id\": \"menu_inicial\",\n            \"title\": \"Volver al menu\"\n          }\n        }\n      ]\n    }\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6380,
        300
      ],
      "id": "877f02ee-714d-4ca6-802b-2fffb85aaf9f",
      "name": "calendario eventos"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"text\": \"interactive\",\n  \"text\": {\n    \"body\": \"{{ $json.salida_whatsapp_guardian_function.mensaje_guardian_options }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3680,
        380
      ],
      "id": "6df817a4-30cf-4130-a438-23b78537c51d",
      "name": "calendario eventos1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8fd9ec0b-d6a3-4a2a-bedc-1f31f2f4f709",
              "leftValue": "={{ $json.salida_whatsapp_guardian_function.imagen_url }}",
              "rightValue": "null",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3700,
        800
      ],
      "id": "d13dc270-66e0-462c-80ec-c06b869cdc3b",
      "name": "If7"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"text\": \"interactive\",\n  \"text\": {\n    \"body\": {{ JSON.stringify($json.salida_whatsapp_guardian_function.mensaje_guardian_options) }}\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4000,
        600
      ],
      "id": "eaae8e27-8f43-40c7-a31b-d76d0ab6ccf8",
      "name": "calendario eventos2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"type\": \"image\",\n  \"image\": {\n    \"link\": \"{{ $json.salida_whatsapp_guardian_function.imagen_url }}\",\n    \"caption\": {{ JSON.stringify($json.salida_whatsapp_guardian_function.mensaje_guardian_options) }}\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3980,
        820
      ],
      "id": "e8a81fad-83a8-4fde-b46e-73059db9bc40",
      "name": "calendario eventos3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ddf0020f-affc-4e34-8acc-ba0cbe6b025d",
              "leftValue": "={{ $('WhatsApp Trigger').item.json.messages[0].interactive }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2320,
        -420
      ],
      "id": "79893411-07e2-414d-b0a4-52126db4d457",
      "name": "If8"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9b562075-a550-4abf-b109-c329dec77be5",
              "leftValue": "={{ $json.type_conversation_finded }}",
              "rightValue": "chatbot",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1120,
        -900
      ],
      "id": "c654fcf8-a7ee-4bee-94cd-9d9536f20e2f",
      "name": "If9"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9b562075-a550-4abf-b109-c329dec77be5",
              "leftValue": "={{ $json.type_conversation_edited }}",
              "rightValue": "chatbot",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1120,
        -680
      ],
      "id": "1a67e104-e635-4afd-a4d2-7a07f84fe096",
      "name": "If10"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"type\": \"interactive\",\n  \"interactive\": {\n    \"type\": \"button\",\n    \"body\": {\n      \"text\": \"{{ $json.response }}\\n\\n si necesitas realizar otra pregunta no dudes en hacerla\"\n    },\n    \"action\": {\n      \"buttons\": [\n        {\n          \"type\": \"reply\",\n          \"reply\": {\n            \"id\": \"menu_inicial\",\n            \"title\": \"Volver al menu\"\n          }\n        }\n      ]\n    }\n } }\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4440,
        -260
      ],
      "id": "03fd18ba-f526-46c0-80de-7e853c2d435c",
      "name": "respuesta preguta frecuente"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "670342e3-e699-4e30-af27-04db7bace385",
              "name": "user_id",
              "value": "={{ $('Main Logic Placeholder').item.json.students_data[0].user_id }}",
              "type": "string"
            },
            {
              "id": "391a519a-9e7c-4dee-8dfc-f8b38f7f8fc7",
              "name": "information",
              "value": "respuesta FAQ",
              "type": "string"
            },
            {
              "id": "915b68b5-3dee-44ad-82f6-65a3d9a74629",
              "name": "log_id",
              "value": "={{ $json.uuid }}",
              "type": "string"
            },
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "state",
              "value": "espera_respuesta_menu_inicial",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            },
            {
              "id": "a42f5e28-1108-4a25-8f1f-03304627c113",
              "name": "pregunta",
              "value": "={{ $('WhatsApp Trigger').item.json.messages[0].text.body }}",
              "type": "string"
            },
            {
              "id": "943caa18-fc13-43f9-8b6e-8a6111151ec7",
              "name": "respuesta",
              "value": "={{ $('Code6').item.json.response }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4860,
        -260
      ],
      "id": "5c6d2e4c-a776-4b07-9571-50ceb6abf313",
      "name": "Edit Fields20"
    },
    {
      "parameters": {
        "operation": "insert",
        "collection": "log_chatbot",
        "fields": "user_id, information,log_id, date, pregunta, respuesta",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        5080,
        -260
      ],
      "id": "1a99a05b-9152-46fa-b0f3-c30e1cb76af3",
      "name": "MongoDB18",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Importante: Esto se coloca dentro de un nodo \"Code\" en n8n\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nreturn [\n  {\n    json: {\n      uuid: uuidv4(),\n      now: new Date().toLocaleString('es-MX', {\n  timeZone: 'America/Mexico_City'\n})\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4640,
        -260
      ],
      "id": "9ecdbec2-0bae-4041-a737-05d1ac317548",
      "name": "Code15",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "670342e3-e699-4e30-af27-04db7bace385",
              "name": "user_id",
              "value": "={{ $('Main Logic Placeholder').item.json.students_data[0].user_id }}",
              "type": "string"
            },
            {
              "id": "391a519a-9e7c-4dee-8dfc-f8b38f7f8fc7",
              "name": "information",
              "value": "respuesta FAQ",
              "type": "string"
            },
            {
              "id": "915b68b5-3dee-44ad-82f6-65a3d9a74629",
              "name": "log_id",
              "value": "={{ $json.uuid }}",
              "type": "string"
            },
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "state",
              "value": "espera_respuesta_menu_inicial",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            },
            {
              "id": "a42f5e28-1108-4a25-8f1f-03304627c113",
              "name": "pregunta",
              "value": "={{ $('WhatsApp Trigger').item.json.messages[0].text.body }}",
              "type": "string"
            },
            {
              "id": "943caa18-fc13-43f9-8b6e-8a6111151ec7",
              "name": "respuesta",
              "value": "={{ $('Code6').item.json.response }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4720,
        -480
      ],
      "id": "467f3e81-2c5a-4482-8c6e-4500235ae4b9",
      "name": "Edit Fields21"
    },
    {
      "parameters": {
        "operation": "insert",
        "collection": "log_chatbot",
        "fields": "user_id, information,log_id, date, pregunta, respuesta",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        4940,
        -480
      ],
      "id": "7f8bd907-5406-488c-9437-3dea6779aa39",
      "name": "MongoDB19",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Importante: Esto se coloca dentro de un nodo \"Code\" en n8n\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nreturn [\n  {\n    json: {\n      uuid: uuidv4(),\n      now: new Date().toLocaleString('es-MX', {\n  timeZone: 'America/Mexico_City'\n})\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4500,
        -480
      ],
      "id": "272def20-68ae-4b54-83ca-2a9742a3734e",
      "name": "Code16",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "collection": "user_state",
        "updateKey": "userStateId",
        "fields": "type_conversation, date",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        3600,
        -160
      ],
      "id": "560e0bc6-066d-42b1-beac-2459151d3d21",
      "name": "MongoDB20",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "type_conversation",
              "value": "agente",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3380,
        -160
      ],
      "id": "1fadd807-d9ce-4db0-996b-e129fab2ab57",
      "name": "Edit Fields22"
    },
    {
      "parameters": {
        "jsCode": "\n\nreturn [\n  {\n    json: {\n      now: new Date().toLocaleString('es-MX', {\n  timeZone: 'America/Mexico_City'\n})\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3160,
        -160
      ],
      "id": "bad0136b-ae55-4729-a1f4-c5b8f7afa1a5",
      "name": "Code17",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cee8dd42-7e45-4a60-8990-ff8cea984ca1",
              "leftValue": "={{ $json.has_content }}",
              "rightValue": "no",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5140,
        -740
      ],
      "id": "17303b77-2ac7-44b1-b3cf-fa0726286aa2",
      "name": "revisamos si no hay eventos para el mes en curso"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f1abb7ca-4ecb-41a3-ab94-009ee4b85025",
              "leftValue": "={{ $json.response }}",
              "rightValue": "Me temo que no puedo responder a tu pregunta.",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4060,
        -460
      ],
      "id": "e850ce82-a259-4154-9b4d-dfeb09a62a6d",
      "name": "revisamos si el chat no puede responder a la pregunta"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"type\": \"interactive\",\n  \"interactive\": {\n    \"type\": \"button\",\n    \"body\": {\n      \"text\": \"{{ $json.response }}\\n\\n si necesitas realizar otra pregunta no dudes en hacerla\\n\\n o si necesitas hablar con un agente preciona hablar con agente\"\n    },\n    \"action\": {\n      \"buttons\": [\n        {\n          \"type\": \"reply\",\n          \"reply\": {\n            \"id\": \"menu_inicial\",\n            \"title\": \"Volver al menu\"\n          }\n        },\n        {\n          \"type\": \"reply\",\n          \"reply\": {\n            \"id\": \"contacto_agente\",\n            \"title\": \"Hablar con Agente\"\n          }\n        }\n      ]\n    }\n } }\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4300,
        -480
      ],
      "id": "e143342c-76e3-4ad3-bacf-f5e5a561c657",
      "name": "respuesta negativa preguta frecuente"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b74a5ca4-02b0-412f-98f8-5e6a71bce930",
              "leftValue": "={{ $('WhatsApp Trigger').item.json.messages[0].interactive.type }}",
              "rightValue": "button_reply",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2800,
        -600
      ],
      "id": "51fa68e8-2aab-443c-b358-4860c9802fd6",
      "name": "revisamos si se responde por boton"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6c7f1cd2-b359-4352-8450-20749aa9e023",
              "leftValue": "={{ $('WhatsApp Trigger').item.json.messages[0].interactive.button_reply.id }}",
              "rightValue": "menu_inicial",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2900,
        -180
      ],
      "id": "6e1d88aa-52bb-4137-afb7-9a69f3be7f15",
      "name": "el boton es menu inicial"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('WhatsApp Trigger').item.json.messages[0].interactive.button_reply.id }}",
                    "rightValue": "menu_inicial",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "5f3ff794-c8bc-4502-b527-256fa4bfd92f"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "menu inicial"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ca9c8adf-43dc-4bff-97e4-3b434edebbc9",
                    "leftValue": "={{ $('WhatsApp Trigger').item.json.messages[0].interactive.button_reply.id }}",
                    "rightValue": "mas_info_calendario",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "mas informacion"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2640,
        -20
      ],
      "id": "6819bf09-1861-4c44-b327-b94119c88cce",
      "name": "comparamos respuesta de menu de calendario inicial"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f07b7183-62a0-4d4a-90a7-ad93e7acd220",
              "name": "date",
              "value": "={{ $('Code11').item.json.now }}",
              "type": "string"
            },
            {
              "id": "e5baae19-924c-4972-8a51-b4d87aad8bad",
              "name": "state",
              "value": "espera_respuesta_academico",
              "type": "string"
            },
            {
              "id": "127efdf6-7193-4011-a155-fa072b66e80f",
              "name": "userStateId",
              "value": "={{ $('MongoDB').item.json.userStateId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4720,
        -940
      ],
      "id": "83b90b3c-7458-4611-8ffb-4ff6340ad82a",
      "name": "seteamos estatus de espera_respuesta_academico"
    },
    {
      "parameters": {
        "operation": "update",
        "collection": "user_state",
        "updateKey": "userStateId",
        "fields": "state, date",
        "options": {}
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        4940,
        -940
      ],
      "id": "24a9a236-3b80-40fb-b280-5a434a43f5f9",
      "name": "actualizamos estatus del usuario a espera_respuesta_academico",
      "credentials": {
        "mongoDb": {
          "id": "xZYe0R0CRtWFmyv7",
          "name": "MongoDB account cerebro core"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6fca4a7f-bcc2-4d06-97ea-acb43394a3fd",
              "name": "userInput",
              "value": "={{ $('WhatsApp Trigger').item.json.messages[0].text.body }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1880,
        1460
      ],
      "id": "171b3d71-e550-4957-8e7b-bc52b4d99af5",
      "name": "guardamos la respuesta de academico"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  // 1. Leer y convertir a número\n  const raw = item.json.userInput;           \n  const userInput = Number(raw);\n\n  let outputText;\n  switch (userInput) {\n    case 1:\n      outputText = '1';\n      break;\n    case 2:\n      outputText = '2';\n      break;\n    default:\n      outputText = `Error`;\n  }\n\n  return {\n    json: {\n      ...item.json,\n      response: outputText\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2100,
        1460
      ],
      "id": "210af119-cba5-42d5-80ae-dd505ed9a168",
      "name": "Revisamos que el valor este dentro de lo permitido"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2dc06912-029b-4432-914a-89c6216f4d07",
              "leftValue": "={{ $json.response }}",
              "rightValue": "Error",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2320,
        1460
      ],
      "id": "79551987-7408-4b03-82cc-2d92dcb259db",
      "name": "revisamos que la respuesta no sea erronea"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.facebook.com/v22.0/626839230509107/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer EAAHeSgKjRYEBOZBi0kUskW4k3L6ZCO8EhqsGNjWLyfJ3U1NZCbDyQp9WSoX0Ouh8hh44Jue9ev7TMlygkZAMoqMReAJL9cNZBQZCZB508HXZB84HCNFZBIRlSa9cXFs0dXmR31XoO0iUZBOTx4VSnErdZC9OD1sQDKprPHpbK7NBrTZAWy8D6pvNi9w0w4c9pt2KE3stGwZDZD"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messaging_product\": \"whatsapp\",\n  \"recipient_type\": \"individual\",\n  \"to\": \"{{ $('WhatsApp Trigger').item.json.messages[0].from }}\",\n  \"text\": \"interactive\",\n  \"text\": {\n    \"body\": \"Lo lamento, la respuesta es invalida tiene que ser 1 o 2 intenta de nuevo.\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2680,
        1640
      ],
      "id": "fc4f32a9-62e0-4cda-a401-8dd628d12c02",
      "name": "mensaje de error de academico"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.response }}",
                    "rightValue": "1",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "9ff7f440-eb05-4329-ada1-9633190ce5d8"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "39cf8e0b-a920-48a0-ac07-d4dd23bbde4f",
                    "leftValue": "={{ $json.response }}",
                    "rightValue": "2",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2540,
        1360
      ],
      "id": "43c37927-3df2-4716-810f-374a6ffeca48",
      "name": "Switch4"
    },
    {
      "parameters": {
        "url": "={{ $('Set Variables').item.json.currentEnvironment }}/assistant/journal_students?student_id={{ $('Main Logic Placeholder').item.json.students_data[1].student_id }}&tenant_id=﻿﻿{{ $('Main Logic Placeholder').item.json.students_data[1].tenant_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2760,
        1200
      ],
      "id": "f07457ae-2376-490c-895e-ff089651dcc1",
      "name": "HTTP Request4"
    },
    {
      "parameters": {
        "url": "={{ $('Set Variables').item.json.currentEnvironment }}/assistant/send_journal_students_guide?student_id={{ $('Main Logic Placeholder').item.json.students_data[1].student_id }}&tenant_id=﻿﻿{{ $('Main Logic Placeholder').item.json.students_data[1].tenant_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2760,
        1440
      ],
      "id": "f9b526f7-9a7a-4265-9ee9-4a1df597c9cc",
      "name": "HTTP Request5"
    }
  ],
  "connections": {
    "Set Variables": {
      "main": [
        [
          {
            "node": "Auth Guardian",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auth Guardian": {
      "main": [
        [
          {
            "node": "IF - Auth Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF - Auth Success": {
      "main": [
        [
          {
            "node": "Main Logic Placeholder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Main Logic Placeholder": {
      "main": [
        [
          {
            "node": "MongoDB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB1": {
      "main": [
        [
          {
            "node": "MongoDB2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "MongoDB1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WhatsApp Trigger": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB2": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Error mensaje de voz",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "error documento",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "error imagen",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "error video",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Variables",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "revisamos si se responde por boton",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "comparamos respuesta de menu de calendario inicial",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "guardamos la respuesta de academico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "student_id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "student_id": {
      "main": [
        [
          {
            "node": "MongoDB3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB3": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "MongoDB4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB4": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB5": {
      "main": [
        [
          {
            "node": "menu principal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "MongoDB5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "revisamos si no hay eventos para el mes en curso",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "menu principal1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields7": {
      "main": [
        [
          {
            "node": "MongoDB6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "menu principal1": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "MongoDB7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB7": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields9": {
      "main": [
        [
          {
            "node": "MongoDB8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Edit Fields9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB8": {
      "main": [
        [
          {
            "node": "menu principal2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields10": {
      "main": [
        [
          {
            "node": "MongoDB9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "menu principal2": {
      "main": [
        [
          {
            "node": "Edit Fields10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "cuerpo funcion response_worker_FAQ": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "revisamos si el chat no puede responder a la pregunta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "seleccionar usuario mensaje",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "seleccionar usuario mensaje": {
      "main": [
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "body estatus seleccion_alumno",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "body estatus seleccion_alumno": {
      "main": [
        [
          {
            "node": "MongoDB10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB10": {
      "main": [
        [
          {
            "node": "body presentacion menu selec student",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "body presentacion menu selec student": {
      "main": [
        [
          {
            "node": "MongoDB11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields11": {
      "main": [
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "student_id1": {
      "main": [
        [
          {
            "node": "MongoDB12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB12": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields12": {
      "main": [
        [
          {
            "node": "MongoDB13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB13": {
      "main": [
        [
          {
            "node": "Edit Fields13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "Edit Fields12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB14": {
      "main": [
        [
          {
            "node": "menu principal4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields13": {
      "main": [
        [
          {
            "node": "MongoDB14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields14": {
      "main": [
        [
          {
            "node": "calendario",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields15": {
      "main": [
        [
          {
            "node": "MongoDB15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code10": {
      "main": [
        [
          {
            "node": "Edit Fields15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields16": {
      "main": [
        [
          {
            "node": "MongoDB16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code11": {
      "main": [
        [
          {
            "node": "Edit Fields16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB16": {
      "main": [
        [
          {
            "node": "menu academico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "calendario": {
      "main": [
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Edit Fields17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields17": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "menu principal5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "student_id1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "calendario eventos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields18": {
      "main": [
        [
          {
            "node": "MongoDB17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code13": {
      "main": [
        [
          {
            "node": "Edit Fields18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Edit Fields19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields19": {
      "main": [
        [
          {
            "node": "Code14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code14": {
      "main": [
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "calendario eventos": {
      "main": [
        [
          {
            "node": "Code13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "calendario eventos1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "calendario eventos1": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "calendario eventos2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "calendario eventos3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "calendario eventos2": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "calendario eventos3": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields20": {
      "main": [
        [
          {
            "node": "MongoDB18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code15": {
      "main": [
        [
          {
            "node": "Edit Fields20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "respuesta preguta frecuente": {
      "main": [
        [
          {
            "node": "Code15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields21": {
      "main": [
        [
          {
            "node": "MongoDB19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code16": {
      "main": [
        [
          {
            "node": "Edit Fields21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields22": {
      "main": [
        [
          {
            "node": "MongoDB20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code17": {
      "main": [
        [
          {
            "node": "Edit Fields22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "revisamos si no hay eventos para el mes en curso": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "revisamos si el chat no puede responder a la pregunta": {
      "main": [
        [
          {
            "node": "respuesta negativa preguta frecuente",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "respuesta preguta frecuente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "respuesta negativa preguta frecuente": {
      "main": [
        [
          {
            "node": "Code16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "revisamos si se responde por boton": {
      "main": [
        [
          {
            "node": "el boton es menu inicial",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "cuerpo funcion response_worker_FAQ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "el boton es menu inicial": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "comparamos respuesta de menu de calendario inicial": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "menu academico": {
      "main": [
        [
          {
            "node": "seteamos estatus de espera_respuesta_academico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "seteamos estatus de espera_respuesta_academico": {
      "main": [
        [
          {
            "node": "actualizamos estatus del usuario a espera_respuesta_academico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "guardamos la respuesta de academico": {
      "main": [
        [
          {
            "node": "Revisamos que el valor este dentro de lo permitido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Revisamos que el valor este dentro de lo permitido": {
      "main": [
        [
          {
            "node": "revisamos que la respuesta no sea erronea",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "revisamos que la respuesta no sea erronea": {
      "main": [
        [
          {
            "node": "Switch4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "mensaje de error de academico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch4": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "WhatsApp Trigger": [
      {
        "json": {
          "messaging_product": "whatsapp",
          "metadata": {
            "display_phone_number": "5215612472568",
            "phone_number_id": "626839230509107"
          },
          "contacts": [
            {
              "profile": {
                "name": "Rick"
              },
              "wa_id": "5214434901193"
            }
          ],
          "messages": [
            {
              "from": "5214434901193",
              "id": "wamid.HBgNNTIxNDQzNDkwMTE5MxUCABIYFjNFQjBFNjYzRTU2N0FCODUxRkQ3M0MA",
              "timestamp": "1749787479",
              "text": {
                "body": "2"
              },
              "type": "text"
            }
          ],
          "field": "messages"
        }
      }
    ]
  },
  "versionId": "064dab37-cbbb-472e-9565-99fe330aa6f7",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-06-09T16:34:20.836Z",
      "updatedAt": "2025-06-09T16:34:20.836Z",
      "role": "workflow:owner",
      "workflowId": "k6PApGOzpLKtnZ0q",
      "projectId": "BsYMJSPwury6TiTn",
      "project": {
        "createdAt": "2025-06-06T20:24:22.277Z",
        "updatedAt": "2025-06-06T21:09:46.835Z",
        "id": "BsYMJSPwury6TiTn",
        "name": "adolfo huerta <adolfocuentas123@gmail.com>",
        "type": "personal",
        "icon": null,
        "projectRelations": [
          {
            "createdAt": "2025-06-06T20:24:22.278Z",
            "updatedAt": "2025-06-06T20:24:22.278Z",
            "role": "project:personalOwner",
            "userId": "f9268337-0922-4cba-994c-bf6b40332731",
            "projectId": "BsYMJSPwury6TiTn",
            "user": {
              "createdAt": "2025-06-06T20:24:22.275Z",
              "updatedAt": "2025-06-10T22:30:29.363Z",
              "id": "f9268337-0922-4cba-994c-bf6b40332731",
              "email": "adolfocuentas123@gmail.com",
              "firstName": "adolfo",
              "lastName": "huerta",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-06-06T21:09:59.993Z",
                "personalization_survey_n8n_version": "1.92.2",
                "companySize": "<20",
                "companyType": "saas",
                "role": "business-owner",
                "reportedSource": "twitter"
              },
              "settings": {
                "firstSuccessfulWorkflowId": "k6PApGOzpLKtnZ0q",
                "userActivated": true,
                "userActivatedAt": 1749594629341
              },
              "role": "global:member",
              "disabled": false,
              "mfaEnabled": false,
              "isPending": false,
              "isOwner": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}