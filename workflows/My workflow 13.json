{
  "createdAt": "2025-06-09T19:30:03.543Z",
  "updatedAt": "2025-06-09T19:30:03.543Z",
  "id": "qUZ53cKZZ8o1suRe",
  "name": "My workflow 13",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "agent": "openAiFunctionsAgent",
        "promptType": "define",
        "text": "=Title: {{ $json.data.transcript.title }}\n\nParticipants: {{ $json.data.transcript.participants }}\n\nTranscript: {{ JSON.stringify($json.data.transcript.sentences) }}\n\nBullet gist:{{ $json.data.transcript.summary.bullet_gist }}",
        "options": {
          "systemMessage": "=You get my calls' transcripts from Firefiles.\nThere can be meetings about projects. You can understand if it's about a project if meeting's title contains \"project\". If so - you need to:\n1. Analyze transcript, use tool \"Create Tasks\" to create tasks for me in my AirTable base.\n2. You need to use tool \"Notify Client About Tasks\" to nofity client about his tasks.\n3. If transcript contains info there's a call needed - you'll use \"Create Event\" tool to create call on Google Meet\nCurrent date: {{ $now }}"
        }
      },
      "id": "bc9b8359-d97f-4b93-a234-f2e90e277ea2",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1260,
        220
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "77f91e53-3a17-4040-89e7-bb61772a6a81",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1240,
        500
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "name": "create_task",
        "description": "=Use this tool to create a task. \nFor task creation use only action items for me [YOUR NAME HERE], don't use action items for other participants.",
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "Jo0BiizccacaChkH",
          "cachedResultName": "Firefiles AI Agent"
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n \"type\": \"object\",\n \"properties\": {\n \"items\": {\n \"type\": \"array\",\n \"description\": \"An array of tasks\",\n \"items\": {\n \"type\": \"object\",\n \"properties\": {\n \"name\": {\n \"type\": \"string\",\n \"description\": \"The name of the task\"\n },\n \"description\": {\n \"type\": \"string\",\n \"description\": \"A detailed description of the task\"\n },\n \"due_date\": {\n \"type\": \"string\",\n \"description\": \"Due Date\"\n },\n \"priority\": {\n \"type\": \"string\",\n \"description\": \"Priority. . Please capitalize first letter\"\n },\n \"project_name\": {\n \"type\": \"string\",\n \"description\": \"Name of the project. Word 'Project' shouldn't be included\"\n }\n },\n \"required\": [\n \"name\",\n \"description\",\n \"due_date\",\n \"priority\"\n ],\n \"additionalProperties\": false\n }\n }\n },\n \"required\": [\n \"items\"\n ],\n \"additionalProperties\": false\n}"
      },
      "id": "55d5fd83-3b89-49bf-a9cd-ac1c2d63fb17",
      "name": "Create Tasks",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        1400,
        500
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "=Use the tool to notify a participant of the meeting with meeting summary and his tasks.\nIMPORTANT: \n1. Please notify participants except for me. My email: [YOUR EMAIL HERE]\n2. When working with tasks - please send only the participant's tasks.",
        "sendTo": "={{ $fromAI(\"participant_email\",\"participant email \",\"string\") }}",
        "subject": "Meeting Summary",
        "emailType": "text",
        "message": "=Summary:\n{{ $json.data.transcript.summary.bullet_gist }}\n\nAction Items:\n{{ $fromAI(\"participant_action_items\",\"participant action items \",\"string\") }}",
        "options": {
          "appendAttribution": false
        }
      },
      "id": "77922321-7375-4533-a50f-f483da2ca49f",
      "name": "Notify Client About Tasks",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        1540,
        500
      ],
      "webhookId": "519d9406-10ef-4ae1-a747-d278002cac9e",
      "typeVersion": 2.1
    },
    {
      "parameters": {},
      "id": "1225cc5a-e676-489a-b2c8-01889b452029",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        820,
        880
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "fieldToSplitOut": "query.items",
        "options": {}
      },
      "id": "d57d8c71-493a-4dcd-9b93-bb473d44e898",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        1040,
        880
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "mode": "list",
          "value": "appndgSF4faN4jPXi",
          "cachedResultUrl": "https://airtable.com/appndgSF4faN4jPXi",
          "cachedResultName": "Philipp's Base"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "tblaCSndQsSF3gq7Z",
          "cachedResultUrl": "https://airtable.com/appndgSF4faN4jPXi/tblaCSndQsSF3gq7Z",
          "cachedResultName": "Tasks"
        },
        "columns": {
          "value": {
            "Name": "={{ $json.name }}",
            "Project": "={{ [$json.project_name] }}",
            "Due Date": "={{ $json.due_date }}",
            "Priority": "={{ $json.priority }}",
            "Description": "={{ $json.description }}"
          },
          "schema": [
            {
              "id": "Name",
              "type": "string",
              "display": true,
              "removed": false,
              "readOnly": false,
              "required": false,
              "displayName": "Name",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Description",
              "type": "string",
              "display": true,
              "removed": false,
              "readOnly": false,
              "required": false,
              "displayName": "Description",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Priority",
              "type": "options",
              "display": true,
              "options": [
                {
                  "name": "Low",
                  "value": "Low"
                },
                {
                  "name": "Medium",
                  "value": "Medium"
                },
                {
                  "name": "Urgent",
                  "value": "Urgent"
                },
                {
                  "name": "low",
                  "value": "low"
                },
                {
                  "name": "medium",
                  "value": "medium"
                },
                {
                  "name": "urgent",
                  "value": "urgent"
                }
              ],
              "removed": false,
              "readOnly": false,
              "required": false,
              "displayName": "Priority",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Due Date",
              "type": "dateTime",
              "display": true,
              "removed": false,
              "readOnly": false,
              "required": false,
              "displayName": "Due Date",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Project",
              "type": "array",
              "display": true,
              "removed": false,
              "readOnly": false,
              "required": false,
              "displayName": "Project",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": []
        },
        "options": {
          "typecast": true
        }
      },
      "id": "a2fbd14d-a46e-4f37-85e0-39af3f7adf0c",
      "name": "Create Task",
      "type": "n8n-nodes-base.airtable",
      "position": [
        1260,
        880
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "=Use tool to create Google Calendar Event. Use this tool only when transcript contains information that call should be scheduled.",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "philipp@lowcoding.dev",
          "cachedResultName": "philipp@lowcoding.dev"
        },
        "start": "={{ $fromAI(\"start_date_time\",\"Date and time of meeting start\",\"string\") }}",
        "end": "={{ $fromAI(\"end_date_time\",\"Date and time of meeting end\",\"string\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"email\",\"client email\",\"string\") }}"
          ],
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "summary": "={{ $fromAI(\"meeting_name\",\"Meeting name\",\"string\") }}"
        }
      },
      "id": "b96c70e6-d55f-4366-be7c-560ee1a8b593",
      "name": "Create Event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        1700,
        500
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "df852a9f-5ea3-43f2-bd49-d045aba5e9c9",
        "options": {}
      },
      "id": "5daa4379-3e55-4fb6-84cb-43758156e4bb",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        840,
        220
      ],
      "webhookId": "df852a9f-5ea3-43f2-bd49-d045aba5e9c9",
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.fireflies.ai/graphql",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer [YOUR API KEY HERE]"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"query\": \"query Transcript($transcriptId: String!) { transcript(id: $transcriptId) { title participants speakers { id name } sentences { speaker_name text } summary { bullet_gist } } }\",\n \"variables\": {\n \"transcriptId\": \"{{ $json.meetingId }}\"\n }\n}",
        "options": {}
      },
      "id": "5aedc5f3-3bdc-44ff-99f8-d533a8722acd",
      "name": "Get Meeting Content",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1060,
        220
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "content": "### Replace API key for Fireflies\n",
        "height": 80,
        "color": 4
      },
      "id": "0117c7a7-f927-4702-8fe8-d787e0f31e15",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        980,
        100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Replace connections for Airtable and Google\n",
        "height": 80,
        "color": 4
      },
      "id": "8a96f100-53a1-446d-9b15-2d1568645237",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1540,
        660
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Scenario 2 - Create Tasks tool",
        "height": 280,
        "width": 820
      },
      "id": "81dfbf28-138c-458f-b935-91ce887067c0",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        740,
        800
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Scenario 1 - AI agent",
        "height": 760,
        "width": 1100
      },
      "id": "507372f2-20d2-4fa3-8865-7972fa121c51",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        740,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Replace OpenAI connection\n",
        "height": 80,
        "color": 4
      },
      "id": "5b51e880-9afa-4164-ad73-7e6dbfe77782",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1160,
        640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Set up steps\n\n#### Preparation\n1. **Create Accounts**:\n - [N8N](https://n8n.partnerlinks.io/2hr10zpkki6a): For workflow automation.\n - [Airtable](https://airtable.com/): For database hosting and management.\n - [Fireflies](https://fireflies.ai/): For recording meetings.\n\n#### N8N Workflow\n\n1. **Configure the Webhook**: \n - Set up a webhook to capture meeting completion events and integrate it with Fireflies.\n\n2. **Retrieve Meeting Content**: \n - Use GraphQL API requests to extract meeting details and transcripts, ensuring appropriate authentication through Bearer tokens.\n\n3. **AI Processing Setup**: \n - Define system messages for AI tasks and configure connections to the AI chat model (e.g., OpenAI's GPT) to process transcripts.\n\n4. **Task Creation Logic**: \n - Create structured tasks based on AI output, ensuring necessary details are captured and records are created in Airtable.\n\n5. **Client Notifications**: \n - Use an email node to notify clients about their tasks, ensuring communications are client-specific.\n\n6. **Scheduling Follow-Up Calls**: \n - Set up Google Calendar events if follow-up meetings are required, populating details from the original meeting context.\n\n7. **Final Testing**: \n - Conduct tests to ensure each part of the workflow is functional and seamless, making adjustments as needed based on feedback.",
        "height": 566,
        "width": 280,
        "color": 7
      },
      "id": "28c1a0ba-c662-4bd1-ac85-80dbf405a123",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "![5min Logo](https://cflobdhpqwnoisuctsoc.supabase.co/storage/v1/object/public/my_storage/banner.png)\n## AI Agent for project management and meetings with Airtable and Fireflies\n**Made by [Philipp Bekher](https://www.linkedin.com/in/philipp-bekher-5437171a4/) from community [5minAI](https://www.skool.com/5minai-2861)**\n\nManaging action items from meetings can often lead to missed tasks and poor follow-up. This automation alleviates that issue by automatically generating tasks from meeting transcripts, keeping everyone informed about their responsibilities and streamlining communication.\n\nThe workflow leverages n8n to create a Smart Agent that listens for completed meeting transcripts, processes them using AI, and generates tasks in Airtable. Key functionalities include:\n- Capturing completed meeting events through webhooks.\n- Extracting relevant meeting details such as transcripts and participants using API calls.\n- Generating structured tasks from meeting discussions and sending notifications to clients.\n\n",
        "height": 497.1532689930921,
        "width": 636.2128494576581,
        "color": 7
      },
      "id": "93ca59e9-571a-42fd-b7a4-1394dac66fd6",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### ... or watch set up video [10 min]\n[![Youtube Link](https://cflobdhpqwnoisuctsoc.supabase.co/storage/v1/object/public/my_storage/Video%2011%20-%20Fireflies%20Agent%20Blur.png)](https://www.youtube.com/watch?v=0TyX7G00x3A)\n",
        "height": 239.5888196628349,
        "width": 330.5152611046425,
        "color": 7
      },
      "id": "ce3e88f6-0094-4b41-bce9-9d990c2e0d14",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        300,
        520
      ],
      "typeVersion": 1
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Get Meeting Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Create Task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Event": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Tasks": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get Meeting Content": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notify Client About Tasks": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "372c5ea1-0c80-4e0a-9e43-6385ab761ff7",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-06-09T19:30:03.547Z",
      "updatedAt": "2025-06-09T19:30:03.547Z",
      "role": "workflow:owner",
      "workflowId": "qUZ53cKZZ8o1suRe",
      "projectId": "UPXsxNbEdAC5wodw",
      "project": {
        "createdAt": "2025-05-30T21:50:35.802Z",
        "updatedAt": "2025-05-30T21:51:22.504Z",
        "id": "UPXsxNbEdAC5wodw",
        "name": "Alexandra  Trujillo  <alexandra.trujillo@canteradigital.mx>",
        "type": "personal",
        "icon": null,
        "projectRelations": [
          {
            "createdAt": "2025-05-30T21:50:35.804Z",
            "updatedAt": "2025-05-30T21:50:35.804Z",
            "role": "project:personalOwner",
            "userId": "65d58894-4572-495d-8c41-0b8ea4c5b71f",
            "projectId": "UPXsxNbEdAC5wodw",
            "user": {
              "createdAt": "2025-05-30T21:50:35.800Z",
              "updatedAt": "2025-06-12T00:59:16.255Z",
              "id": "65d58894-4572-495d-8c41-0b8ea4c5b71f",
              "email": "alexandra.trujillo@canteradigital.mx",
              "firstName": "Alexandra ",
              "lastName": "Trujillo ",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-05-30T21:52:04.811Z",
                "personalization_survey_n8n_version": "1.92.2",
                "automationGoalDevops": [
                  "data-syncing",
                  "ticketing-systems-integrations",
                  "ci-cd",
                  "monitoring-alerting",
                  "reporting",
                  "incident-response"
                ],
                "companyType": "systems-integrator",
                "role": "it"
              },
              "settings": {
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "bmdwVJ36IDZozHoU",
                "userActivated": true,
                "userActivatedAt": 1749246625266,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1749689952085
                }
              },
              "role": "global:member",
              "disabled": false,
              "mfaEnabled": false,
              "isPending": false,
              "isOwner": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}